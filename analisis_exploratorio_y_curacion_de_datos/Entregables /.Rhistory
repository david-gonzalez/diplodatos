knitr::opts_chunk$set(echo = TRUE)
carriers = nycflights13::airlines
install.packages("nycflights13")
library("nycflights13", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.4")
knitr::opts_chunk$set(echo = TRUE)
carriers = nycflights13::airlines
carriers
dataset = nycflights13::flights
dataset
summary(dataset)
dim(dataset)
str(dataset)
arribaron_con_mas_de_dos_horas_de_retraso = subset(dataset, dataset$arr_delay > 120)
arribaron_con_mas_de_dos_horas_de_retraso
hacia_houston = subset(dataset, dataset$dest == 'HOU' | dataset$dest == 'IAH' )
hacia_houston
operados_por_UA_AA_DL = subset(dataset, dataset$carrier == 'UA' | dataset$carrier == 'AA' | dataset$carrier == 'DL')
operados_por_UA_AA_DL
arrivaron_tarde_pero_salieron_bien = subset(dataset, dataset$arr_delay > 120 & dataset$dep_delay  <= 0)
arrivaron_tarde_pero_salieron_bien
salieron_en_verano = subset(dataset, dataset$month == 7 | dataset$month == 8 | dataset$month == 9)
salieron_en_verano
salieron_entre_medianoche_y_6_am = subset(dataset, dataset$hour >= 0 & dataset$hour <= 5)
salieron_entre_medianoche_y_6_am
knitr::opts_chunk$set(echo = TRUE)
# PrÃ¡ctico 1:
# Leemos el Dataset y sus caracteristicas principales.
ds = read.csv("http://archive.ics.uci.edu/ml/machine-learning-databases/breast-cancer-wisconsin/wdbc.data",header=FALSE)
ds = ds[-1]
ds
summary(ds)
table(ds$V2)
str(ds)
# FunciÃ³n de normalizacion.
normalize <- function(x) {
return ((x-min(x))/(max(x)-min(x)))
}
ds_normalizado <- as.data.frame(lapply(ds[2:31], normalize))
ds_normalizado
data_train <- ds_normalizado[1:469, ]
data_test <- ds_normalizado[470:569, ]
# Excluimos la variable objetivo (Benigno/Maligno), pero necesitamos guardar estos factores en vectores!
data_train_labels <- ds[1:469, 1]
data_test_labels <- ds[470:569, 1]
library(class)
data_test_pred <- knn(train=data_train, test=data_test, cl=data_train_labels, k=21)
library(gmodels)
CrossTable(x=data_test_labels, y=data_test_pred, prop.chisq = FALSE)
ds_z_score <- scale(ds[-1])
data_train <- ds_z_score[1:469, ]
data_test <- ds_z_score[470:569, ]
data_train_labels <- ds[1:469, 1]
data_test_labels <- ds[470:569, 1]
library(class)
data_test_pred_k21 <- knn(train=data_train, test=data_test, cl=data_train_labels, k=21)
library(gmodels)
CrossTable(x=data_test_labels, y=data_test_pred_k21, prop.chisq = FALSE)
ds_z_score <- scale(ds[-1])
data_train <- ds_z_score[1:469, ]
data_test <- ds_z_score[470:569, ]
data_train_labels <- ds[1:469, 1]
data_test_labels <- ds[470:569, 1]
library(class)
data_test_pred_k1 <- knn(train=data_train, test=data_test, cl=data_train_labels, k=1)
data_test_pred_k5 <- knn(train=data_train, test=data_test, cl=data_train_labels, k=5)
data_test_pred_k11 <- knn(train=data_train, test=data_test, cl=data_train_labels, k=11)
data_test_pred_k15 <- knn(train=data_train, test=data_test, cl=data_train_labels, k=15)
data_test_pred_k21 <- knn(train=data_train, test=data_test, cl=data_train_labels, k=21)
library(gmodels)
CrossTable(x=data_test_labels, y=data_test_pred_k1, prop.chisq = FALSE)
CrossTable(x=data_test_labels, y=data_test_pred_k5, prop.chisq = FALSE)
CrossTable(x=data_test_labels, y=data_test_pred_k11, prop.chisq = FALSE)
CrossTable(x=data_test_labels, y=data_test_pred_k15, prop.chisq = FALSE)
CrossTable(x=data_test_labels, y=data_test_pred_k21, prop.chisq = FALSE)
ds <- ds[sample(1:nrow(ds)), ]
ds_z_score <- scale(ds[-1])
ds_z_score <- scale(ds[-1])
data_train <- ds_z_score[101:569, ]
data_test <- ds_z_score[1:100, ]
data_train_labels <- ds[101:569, 1]
data_test_labels <- ds[1:100, 1]
library(class)
library(gmodels)
data_test_pred_k15 <- knn(train=data_train, test=data_test, cl=data_train_labels, k=15)
CrossTable(x=data_test_labels, y=data_test_pred_k15, prop.chisq = FALSE)
